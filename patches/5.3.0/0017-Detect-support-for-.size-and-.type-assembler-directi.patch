From 8a9babc8d4db19b0015a6c4f10b4baee72026bec Mon Sep 17 00:00:00 2001
From: Samuel Hym <samuel@tarides.com>
Date: Fri, 31 Jan 2025 18:25:06 +0100
Subject: [PATCH 17/22] Detect support for `.size` and `.type` assembler
 directives

Detect during `configure` whether the C compiler generates `.size` and
`.type` assembler directives
Set the result to true if and only if both directives are generated for
functions and the `.type` directive is generated for objects (directives
equivalent to `.size` could be used for a simple `int`); display a
warning if some of the three combinations appear but not all three
Define a macro in `m.h` and a configure variable so that OCaml can do as
cc does
---
 aclocal.m4          |  48 ++++++++++++++++++++++++++++++++++++++++++++
 configure           | Bin 706809 -> 709763 bytes
 configure.ac        |   2 ++
 runtime/caml/m.h.in |   5 +++++
 4 files changed, 55 insertions(+)

diff --git a/aclocal.m4 b/aclocal.m4
index 9c6feb1034..daf2f0ce5e 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -550,6 +550,54 @@ AC_DEFUN([OCAML_WITH_NONEXECSTACK_NOTE],
     [with_nonexecstack_note=false])
 ])
 
+AC_DEFUN([OCAML_ASM_SIZE_TYPE_DIRECTIVES],
+  [AC_REQUIRE([AC_PROG_GREP])dnl
+  AC_CACHE_CHECK([if $CC generates .size and .type asm directives],
+    [ocaml_cv_prog_cc_asm_size_type_directives],
+    [OCAML_CC_SAVE_VARIABLES
+
+    # We write the assembly into the .$ac_objext file as AC_COMPILE_IFELSE
+    # assumes an error if such a file doesn't exist after compiling
+    CFLAGS="$CFLAGS -S -o conftest.$ac_objext"
+
+    ocaml_cv_prog_cc_asm_size_type_directives=no
+    AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+int feat_detect_obj;
+int feat_detect_func(void) {
+  return 42;
+}
+    ]])],
+      [asm_type_obj_directive=no
+      asm_type_func_directive=no
+      asm_size_func_directive=no
+      # We do not look for a .size directive for the object as it is not
+      # generated in that simple case for instance by the compiler
+      # powerpc64le-linux-gnu-gcc 14.2 which emits instead an .lcomm directive
+      AS_IF([$GREP '\.type.*feat_detect_obj' conftest.$ac_objext >/dev/null],
+        [asm_type_obj_directive=yes])
+      AS_IF([$GREP '\.type.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_type_func_directive=yes])
+      AS_IF([$GREP '\.size.*feat_detect_func' conftest.$ac_objext >/dev/null],
+        [asm_size_func_directive=yes])
+      AS_CASE([m4_join([,],[$asm_type_obj_directive],[$asm_type_func_directive],
+          [$asm_size_func_directive])],
+        [yes,yes,yes],
+          [ocaml_cv_prog_cc_asm_size_type_directives=yes],
+        [no,no,no],
+          [ocaml_cv_prog_cc_asm_size_type_directives=no],
+        [ocaml_cv_prog_cc_asm_size_type_directives=unconclusive])])
+    OCAML_CC_RESTORE_VARIABLES])
+
+  AS_CASE([$ocaml_cv_prog_cc_asm_size_type_directives],
+    [yes],
+      [asm_size_type_directives=true
+      AC_DEFINE([ASM_SIZE_TYPE_DIRECTIVES], [1])],
+    [no],
+      [asm_size_type_directives=false],
+    [AC_MSG_WARN([found inconsistent results for .size and .type directives])
+    asm_size_type_directives=false])
+])
+
 AC_DEFUN([OCAML_CC_SUPPORTS_LABELS_AS_VALUES], [
   AC_CACHE_CHECK([whether $CC supports the labels as values extension],
     [ocaml_cv_prog_cc_labels_as_values],
diff --git a/configure b/configure
index 04aa389dc05d9592b6013fe73b16571384304e5b..21002bd5de4eacc978f2e09e3bbdc808c77ebebe 100755
GIT binary patch
delta 1614
zcmb7E&ubGw6eex+^Pt398nu*XTkY?lA=K88LeWrLP-0RPMc8aNv&raYHtcR%qbVu$
z(1WKUI=y=I)?1Du_y-7Hm9{DsdJ+#pLDaXKCNZ(mHstMLX5Kg7`@T1CZ*6$x<?zPW
zSi4Ri5y8l3iIAikkqo*(R(4~h-I#5Bke@BsZmhC`4Wk946{D@h3ih9rzuUCWw)@R&
z5LpuZCIpCjhQF8H=Xi9>?(I5Y7b=(VZSFY5C!RaKK1>o0V4?HvC$?be%a;9{t*hCY
zFjGBT47jH!J(L+B6VVWo#K1ZPb^d<nuSGe>q=5yMCI{iM2S6i6PGb-Z@K>9zGdw%d
z(p5w@mK>O0lf=9Ste?rm+Bcz^9k9x2cAyt-6G*DSR09-MeE_nmfe2-_lEsP(*0PZ%
zfJCq!)E1}#R5$bXx%5JcFrtYDNdjeHq(uXCn#n2zBvB_80%f`(GKs)^9uMG#n#ody
zXjO=;x=6IFG!|6Is6tsH_i!}Da-%6pf{Q_a02b3!N(0GI0|_7)5tHaR_!UITRQ)9T
zcvObI=~yHR{r9Yv@DDY3(*JaAuY*7PWIs7wm9k#yJkdQeJrtfPaSiZV6|h12rii9b
z^$hC~i`BmS7ow$gU-k03YDQ}7^$_Ka0~*D2vUdQ>N7ls={FpHamn}h5Nz5pMv>;?P
zH6=)rP$gLZg!M2cK`2y4V(N(XKQc-j`@V`Ybma6f+M_Z_$>}&%5XVDwQQ|j$v_$#%
zXV)h0NVHz!v+GXpvHCLj2ie`p6UQAczP#={QFEc8$R3zHKNf-|4{B33;n4d0sdA;R
zdJ>gMMRa@E&~k*oe$(3Rn~Gl-;xl(6!rYx`M7TN=i(HwTxfO}?3*Q~5dzkt^EdI9O
z^6`ydPCrjfwYmMWn#1WyO`UX#j|+#GM)aJ5kIftl4I|VXuD-G`*>0CtIa+q@vFfIB
ofzXoGQ_ac_%c6oqWZyOqf6?jaSY6(+V>mFJ7_QRtjywPHH=VFU7ytkO

delta 67
zcmZo(sr_@J_J$8Z&78s8IfEIEG^g9tF#5K4)i44v6A&{4G0XO@8rHv=?cYAK0x=s9
PvjZ{5_HQ3KdmjM+-N_(0

diff --git a/configure.ac b/configure.ac
index 0f27490092..4709a67479 100644
--- a/configure.ac
+++ b/configure.ac
@@ -232,6 +232,7 @@ AC_SUBST([ASPP])
 AC_SUBST([endianness])
 AC_SUBST([AS])
 AC_SUBST([asm_cfi_supported])
+AC_SUBST([asm_size_type_directives])
 AC_SUBST([sharedlib_cflags])
 AC_SUBST([rpath])
 AC_SUBST([mkdll])
@@ -675,6 +676,7 @@ popdef([host_alias])dnl
 popdef([host])dnl
 
 OCAML_WITH_NONEXECSTACK_NOTE
+OCAML_ASM_SIZE_TYPE_DIRECTIVES
 
 AS_CASE([$host],
   [sparc-sun-solaris*],
diff --git a/runtime/caml/m.h.in b/runtime/caml/m.h.in
index 2fcc9e6e2b..d771d26083 100644
--- a/runtime/caml/m.h.in
+++ b/runtime/caml/m.h.in
@@ -64,6 +64,11 @@
 
 #undef ASM_CFI_SUPPORTED
 
+#undef ASM_SIZE_TYPE_DIRECTIVES
+
+/* Define ASM_SIZE_TYPE_DIRECTIVES when the ".size" and ".type" assembler
+   directives can be used */
+
 #undef WITH_FRAME_POINTERS
 
 #define NO_NAKED_POINTERS 1
-- 
2.47.2

